(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{375:function(t,a,e){"use strict";e.r(a);var s=e(45),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"faq"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#faq"}},[t._v("#")]),t._v(" FAQ")]),t._v(" "),e("h3",{attrs:{id:"i-don-t-know-where-to-start-ðŸ˜¥"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#i-don-t-know-where-to-start-ðŸ˜¥"}},[t._v("#")]),t._v(" I don't know where to start ðŸ˜¥")]),t._v(" "),e("p",[t._v("No worries! Head to the "),e("a",{attrs:{href:"https://ghostdogpr.github.io/caliban/resources/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Resources"),e("OutboundLink")],1),t._v(" page to find a few introductory videos and blog posts. Once you're ready for more details, check the "),e("a",{attrs:{href:"https://ghostdogpr.github.io/caliban/docs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Documentation"),e("OutboundLink")],1),t._v(". If you prefer looking at some code first, check "),e("a",{attrs:{href:"https://ghostdogpr.github.io/caliban/docs/examples.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("this list of examples"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("p",[t._v("If you're still lost, just come to the "),e("a",{attrs:{href:"https://discordapp.com/channels/629491597070827530/633200096393166868",target:"_blank",rel:"noopener noreferrer"}},[t._v("Discord channel"),e("OutboundLink")],1),t._v("!")]),t._v(" "),e("h3",{attrs:{id:"i-m-getting-a-compilation-error-saying-a-schema-is-missing-but-i-don-t-know-which-one"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#i-m-getting-a-compilation-error-saying-a-schema-is-missing-but-i-don-t-know-which-one"}},[t._v("#")]),t._v(" I'm getting a compilation error saying a "),e("code",[t._v("Schema")]),t._v(" is missing, but I don't know which one.")]),t._v(" "),e("p",[t._v("Call directly "),e("code",[t._v("Schema.gen[YourType]")]),t._v(" or just "),e("code",[t._v("gen[YourType]")]),t._v(" if you extend "),e("code",[t._v("GenericSchema")]),t._v(". The error should be more detailed.")]),t._v(" "),e("h3",{attrs:{id:"i-want-to-use-caliban-but-i-use-cats-effect-monix-instead-of-zio"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#i-want-to-use-caliban-but-i-use-cats-effect-monix-instead-of-zio"}},[t._v("#")]),t._v(" I want to use Caliban, but I use Cats Effect / Monix instead of ZIO.")]),t._v(" "),e("p",[t._v('That\'s not a problem! Caliban has interop modules that "hide" the ZIO details and expose Cats Effect or Monix types instead. Check the '),e("a",{attrs:{href:"https://ghostdogpr.github.io/caliban/docs/interop.html#cats-effect",target:"_blank",rel:"noopener noreferrer"}},[t._v("interop docs"),e("OutboundLink")],1),t._v(" for more details.")]),t._v(" "),e("h3",{attrs:{id:"my-query-fails-with-an-effect-failure-error-how-can-i-get-more-details"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#my-query-fails-with-an-effect-failure-error-how-can-i-get-more-details"}},[t._v("#")]),t._v(' My query fails with an "Effect failure" error. How can I get more details?')]),t._v(" "),e("p",[t._v("When an error happens in one of the resolvers, Caliban doesn't expose the inner exception to the client by default (this might be unsafe to do so), but you can easily work around this by several ways:")]),t._v(" "),e("ol",[e("li",[t._v("If you fail with a "),e("code",[t._v("CalibanError.ExecutionError")]),t._v(", it won't be wrapped by Caliban so the original message will be displayed")]),t._v(" "),e("li",[t._v("Using the wrapper "),e("code",[t._v("@@ printErrors")]),t._v(" will print the full error to the console")]),t._v(" "),e("li",[t._v("Using "),e("code",[t._v("mapError")]),t._v(" on your interpreter lets you unwrap the "),e("code",[t._v("CalibanError")]),t._v(" and return your inner exception instead")])]),t._v(" "),e("h3",{attrs:{id:"i-have-more-than-22-fields-in-my-query-i-can-t-create-a-case-class-for-it"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#i-have-more-than-22-fields-in-my-query-i-can-t-create-a-case-class-for-it"}},[t._v("#")]),t._v(" I have more than 22 fields in my Query, I can't create a case class for it.")]),t._v(" "),e("p",[t._v("Instead of one huge case class with all your fields, you can create smaller case classes and combine "),e("code",[t._v("GraphQL")]),t._v(" objects using "),e("code",[t._v("|+|")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-scala extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scala"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" api1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" graphQL"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" api2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" graphQL"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" api "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" api1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" api2\n")])])]),e("h3",{attrs:{id:"how-to-deal-with-authentication-authorization"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#how-to-deal-with-authentication-authorization"}},[t._v("#")]),t._v(" How to deal with authentication/authorization?")]),t._v(" "),e("p",[t._v("This is typically handled with the help of ZIO environment. You can make your field require an "),e("code",[t._v("Auth")]),t._v(" service by returning a "),e("code",[t._v("ZIO[Auth, E, A]")]),t._v(". Then, in your resolver, access the "),e("code",[t._v("Auth")]),t._v(" service to check you have the appropriate permissions. You can inject the authentication information using a middleware in your HTTP server library. Check "),e("a",{attrs:{href:"https://github.com/ghostdogpr/caliban/blob/master/examples/src/main/scala/example/http4s/AuthExampleApp.scala",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),e("OutboundLink")],1),t._v(" for a full example using http4s.")]),t._v(" "),e("h3",{attrs:{id:"i-have-2-case-classes-with-the-same-name-different-packages-how-to-avoid-conflicts"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#i-have-2-case-classes-with-the-same-name-different-packages-how-to-avoid-conflicts"}},[t._v("#")]),t._v(" I have 2 case classes with the same name (different packages). How to avoid conflicts?")]),t._v(" "),e("p",[t._v("You can use the annotation "),e("code",[t._v("@GQLName")]),t._v(" to give another name to any type or field.")]),t._v(" "),e("h3",{attrs:{id:"the-auto-generated-schema-shows-a-field-is-nullable-but-i-want-it-non-nullable-instead"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-auto-generated-schema-shows-a-field-is-nullable-but-i-want-it-non-nullable-instead"}},[t._v("#")]),t._v(" The auto-generated schema shows a field is nullable, but I want it non-nullable instead.")]),t._v(" "),e("p",[t._v("A GraphQL field is marked as nullable if the Scala field returns an "),e("code",[t._v("Option")]),t._v(" or an effect that can fail. Change your effect to return "),e("code",[t._v("UIO")]),t._v(" if you want the field to be non-nullable, and use "),e("code",[t._v("orDie")]),t._v(" if you want to fail the whole query in case of error instead of returning null.")]),t._v(" "),e("h3",{attrs:{id:"can-i-use-a-union-as-input"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#can-i-use-a-union-as-input"}},[t._v("#")]),t._v(" Can I use a union as input?")]),t._v(" "),e("p",[t._v("Unfortunately, it is not supported by the GraphQL spec. See "),e("a",{attrs:{href:"https://github.com/graphql/graphql-spec/issues/488",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/graphql/graphql-spec/issues/488"),e("OutboundLink")],1),t._v(" for discussions. An alternative can be to define your own custom scalar.")]),t._v(" "),e("h3",{attrs:{id:"how-to-deal-with-recursive-types"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#how-to-deal-with-recursive-types"}},[t._v("#")]),t._v(" How to deal with recursive types?")]),t._v(" "),e("p",[t._v("Recursive types can be a little tricky. This is not a silver bullet but usually the trick is to add an "),e("code",[t._v("implicit lazy val")]),t._v(" instance of "),e("code",[t._v("Schema")]),t._v(" for the type that is recursive. See "),e("a",{attrs:{href:"https://github.com/ghostdogpr/caliban/blob/master/examples/src/main/scala/example/optimizations/NaiveTest.scala#L82",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),e("OutboundLink")],1),t._v(" for an example.")]),t._v(" "),e("h3",{attrs:{id:"i-m-getting-a-method-too-large-compiler-error"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#i-m-getting-a-method-too-large-compiler-error"}},[t._v("#")]),t._v(' I\'m getting a "Method too large" compiler error.')]),t._v(" "),e("p",[t._v("When you create a GraphQL API, Caliban (using a macro powered by "),e("a",{attrs:{href:"https://github.com/propensive/magnolia",target:"_blank",rel:"noopener noreferrer"}},[t._v("Magnolia"),e("OutboundLink")],1),t._v(") generates a schema for every type, everywhere it's used. If you use a lot of types, the generated code might be too large. The workaround is to define schemas for your intermediate types:")]),t._v(" "),e("div",{staticClass:"language-scala extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scala"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implicit")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" schemaMyType"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Schema"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Any")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MyType"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Schema"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gen\n")])])]),e("p",[t._v("That way, the schema for this type will be extracted to a single method and defined only once. Do it in priority with types that are re-used in a lot of places: this will reduce the amount of generated code and will speed up compilation time.")]),t._v(" "),e("h3",{attrs:{id:"how-can-i-defined-a-schema-for-a-java-enum"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#how-can-i-defined-a-schema-for-a-java-enum"}},[t._v("#")]),t._v(" How can I defined a Schema for a Java enum?")]),t._v(" "),e("p",[t._v("Here's an example for Java "),e("code",[t._v("DayOfWeek")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-scala extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scala"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implicit")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" dayOfWeekSchema "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Schema"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Any")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DayOfWeek"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" toType"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isInput"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Boolean")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" __Type "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n    Types"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("makeEnum"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      Some"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DayOfWeek"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      None"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      DayOfWeek"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("values"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toList"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" __EnumValue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" None"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" None"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      None\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" resolve"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" DayOfWeek"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Step"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Any")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PureStep"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("StringValue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);