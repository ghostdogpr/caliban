(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{444:function(t,a,s){"use strict";s.r(a);var n=s(65),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"schema-reporting"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#schema-reporting"}},[t._v("#")]),t._v(" Schema Reporting")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("caliban-reporting")]),t._v(" module allows you to integrate with Apollo's "),s("a",{attrs:{href:"https://www.apollographql.com/docs/studio/schema/schema-reporting-protocol/",target:"_blank",rel:"noopener noreferrer"}},[t._v("schema reporting protocol"),s("OutboundLink")],1),t._v(".\nThis enables your servers to automatically publish updated schemas on start up without involving any additional tooling.")]),t._v(" "),s("p",[t._v("You can enable the settings by providing the "),s("code",[t._v("ReportingDaemon")]),t._v(" to your "),s("code",[t._v("Runtime")]),t._v(" during setup.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Define your GraphQL schema normally")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" api"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" GraphQL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" graphQL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RootResolver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Queries"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  characters "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Character"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Amos"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Define a SchemaReporter that will communicate with Apollo")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" reporterL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" SchemaReporter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fromDefaultConfig "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Loads the access token from an environment variable called "APOLLO_KEY"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Or load it from a configuration type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// val reporterL = (ZLayer.service[ApolloConfig] ++ AsyncHttpClientZioBackend.layer()) >>> SchemaReporter.fromConfig[ApolloConfig](_.key)")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Define your graph references")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" daemon"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" URManaged"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Random "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" Has"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ReportingDaemon"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Unit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  graph1 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("<-")]),t._v(" SchemaReportingRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("make"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("api"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my-graph@production"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toManaged_\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// For dynamic or possibly updating schemas you can provide a Ref and a transform function that will allow")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// you to push schema updates that occur at runtime.")]),t._v("\n  ref "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("<-")]),t._v(" Ref"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("makeManaged"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"schema { query: Query }\\n type Query { hello: String! }"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  graph2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("<-")]),t._v(" SchemaReportingRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fromRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ref"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dynamic-graph@production"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("identity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toManaged_\n  _ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("<-")]),t._v(" ReportingDaemon"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("register"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("graph1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  _ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("<-")]),t._v(" ReportingDaemon"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("register"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("graph2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Now wire it up")]),t._v("\ndaemon"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("useForever\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("provideCustomLayer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ZEnv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("any "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" reporterL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),t._v(" ReportingDaemon"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("live"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);